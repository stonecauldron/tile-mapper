@article{Chomsky1956,
abstract = {We investigate several conceptions of linguistic structure to determine whether or not they can provide simple and "revealing" grammars that generate all of the sentences of English and only these. We find that no finite-state Markov process that produces symbols with transition from state to state can serve as an English grammar. Furthermore, the particular subclass of such processes that produce{\textless}tex{\textgreater}n{\textless}/tex{\textgreater}-order statistical approximations to English do not come closer, with increasing{\textless}tex{\textgreater}n{\textless}/tex{\textgreater}, to matching the output of an English grammar. We formalize-the notions of "phrase structure" and show that this gives us a method for describing language which is essentially more powerful, though still representable as a rather elementary type of finite-state process. Nevertheless, it is successful only when limited to a small subset of simple sentences. We study the formal properties of a set of grammatical transformations that carry sentences with phrase structure into new sentences with derived phrase structure, showing that transformational grammars are processes of the same elementary type as phrase-structure grammars; that the grammar of English is materially simplified if phrase structure description is limited to a kernel of simple sentences from which all other sentences are constructed by repeated transformations; and that this view of linguistic structure gives a certain insight into the use and understanding of language.},
author = {Chomsky, Noam},
doi = {10.1109/TIT.1956.1056813},
file = {:Users/pedro/Library/Application Support/Mendeley Desktop/Downloaded/Chomsky - 1956 - Three models for the description of language.pdf:pdf},
isbn = {0096-1000},
issn = {0096-1000},
journal = {IRE Transactions on Information Theory},
number = {3},
pages = {113--124},
title = {{Three models for the description of language}},
volume = {2},
year = {1956}
}
@article{Cross1983,
abstract = {We consider a texture to be a stochastic, possibly periodic, two-dimensional image field. A texture model is a mathematical procedure capable of producing and describing a textured image. We explore the use of Markov random fields as texture models. The binomial model, where each point in the texture has a binomial distribution with parameter controlled by its neighbors and ``number of tries'' equal to the number of gray levels, was taken to be the basic model for the analysis. A method of generating samples from the binomial model is given, followed by a theoretical and practical analysis of the method's convergence. Examples show how the parameters of the Markov random field control the strength and direction of the clustering in the image. The power of the binomial model to produce blurry, sharp, line-like, and blob-like textures is demonstrated. Natural texture samples were digitized and their parameters were estimated under the Markov random field model. A hypothesis test was used for an objective assessment of goodness-of-fit under the Markov random field model. Overall, microtextures fit the model well. The estimated parameters of the natural textures were used as input to the generation procedure. The synthetic microtextures closely resembled their real counterparts, while the regular and inhomogeneous textures did not.},
author = {Cross, George R. and Jain, Anil K.},
doi = {10.1109/TPAMI.1983.4767341},
file = {:Users/pedro/Library/Application Support/Mendeley Desktop/Downloaded/Cross, Jain - 1983 - Markov Random Field Texture Models.pdf:pdf},
issn = {01628828},
journal = {IEEE Transactions on Pattern Analysis and Machine Intelligence},
keywords = {Binomial model,Markov random field,goodness-of-fit,hypothesis test,image modeling,texture},
number = {1},
pages = {25--39},
pmid = {21869080},
title = {{Markov Random Field Texture Models}},
volume = {PAMI-5},
year = {1983}
}
@article{Dahlskog2014,
abstract = {We show that novel, linear game levels can be created using n-grams that have been trained on a corpus of existing levels. The method is fast and simple, and produces levels that are recognisably in the same style as those in the corpus that it has been trained on. We use Super Mario Bros. as an example domain, and use a selection of the levels from the original game as a training corpus. We treat Mario levels as a left-to-right sequence of vertical level slices, allowing us to perform level generation in a setting with some formal similarities to n-gram-based text generation and music generation. In empirical results, we investigate the effects of corpus size and n (sequence length). While the applicability of the method might seem limited to the relatively narrow domain of 2D games, we argue that many games in effect have linear levels and n-grams could be used to good effect, given that a suitable alphabet can be found.},
author = {Dahlskog, Steve and Togelius, Julian and Nelson, Mark J.},
doi = {10.1145/2676467.2676506},
file = {:Users/pedro/Library/Application Support/Mendeley Desktop/Downloaded/Dahlskog, Togelius, Nelson - 2014 - Linear levels through n-grams.pdf:pdf},
isbn = {9781450330060},
journal = {Proceedings of the 18th International Academic MindTrek Conference on Media Business, Management, Content {\&} Services - AcademicMindTrek '14},
keywords = {n-grams,procedural content generation,videogames},
pages = {200--206},
title = {{Linear levels through n-grams}},
url = {http://dl.acm.org/citation.cfm?id=2676467.2676506},
year = {2014}
}
@article{Dormans2010,
abstract = {This paper investigates strategies to generate levels for action adventure games. This genre relies more strongly on well-designed levels than rule-driven genres such as strategy or roleplaying games for which procedural level generation has been successful in the past. The approach outlined by this paper distinguishes between missions and spaces as two separate structures that need to be generated in two individual steps. It discusses the merits of different types of generative grammars for each individual step in the process.},
author = {Dormans, Joris},
doi = {10.1145/1814256.1814257},
file = {:Users/pedro/Library/Application Support/Mendeley Desktop/Downloaded/Dormans - 2010 - Adventures in level design generating missions and spaces for action adventure games.pdf:pdf},
isbn = {9781450300230},
journal = {{\ldots} Workshop on Procedural Content Generation in Games},
keywords = {action adventure games,level design,procedural generation},
pages = {1--8},
title = {{Adventures in level design: generating missions and spaces for action adventure games}},
url = {http://portal.acm.org/citation.cfm?id=1814257{\%}5Cnhttp://dl.acm.org/citation.cfm?id=1814257},
year = {2010}
}
@article{Guzdial2015,
abstract = {Algorithms that generate computer game content require game design knowledge. We present an approach to automatically learn game design knowledge for level design from gameplay videos. We further demonstrate how the acquired design knowledge can be used to generate sections of game levels. Our approach involves parsing video of people playing a game to detect the appearance of patterns of sprites and utilizing machine learning to build a probabilistic model of sprite placement. We show how rich game design information can be automatically parsed from gameplay videos and represented as a set of generative probabilistic models. We use Super Mario Bros. as a proof of concept. We evaluate our approach on a measure of playability and stylistic similarity to the original levels as represented in the gameplay videos.},
archivePrefix = {arXiv},
arxivId = {1602.07721},
author = {Guzdial, Matthew and Riedl, Mark O},
eprint = {1602.07721},
file = {:Users/pedro/Library/Application Support/Mendeley Desktop/Downloaded/Guzdial, Riedl - 2015 - Toward Game Level Generation from Gameplay Videos.pdf:pdf},
isbn = {9780991398256},
journal = {Proceedings of the Sixth Workshop on Procedural Content Generation in Games (PCG 2015)},
keywords = {machine,probabilistic models,procedural content generation},
number = {1},
title = {{Toward Game Level Generation from Gameplay Videos}},
url = {http://www.cc.gatech.edu/{~}riedl/pubs/guzdial-pcg15.pdf},
year = {2015}
}
@article{Hoover2015,
author = {Hoover, Amy K and Togelius, Julian},
file = {:Users/pedro/Library/Application Support/Mendeley Desktop/Downloaded/Hoover, Togelius - 2015 - Composing Video Game Levels with Music Metaphors through Functional Scaffolding.pdf:pdf},
journal = {Proceedings of 1st Computational Creativity {\&} Games Workshop},
title = {{Composing Video Game Levels with Music Metaphors through Functional Scaffolding}},
year = {2015}
}
@article{Li2016,
abstract = {This paper studies a combination of generative Markov random field (MRF) models and discriminatively trained deep convolutional neural networks (dCNNs) for synthesizing 2D images. The generative MRF acts on higher-levels of a dCNN feature pyramid, controling the image layout at an abstract level. We apply the method to both photographic and non-photo-realistic (artwork) synthesis tasks. The MRF regularizer prevents over-excitation artifacts and reduces implausible feature mixtures common to previous dCNN inversion approaches, permitting synthezing photographic content with increased visual plausibility. Unlike standard MRF-based texture synthesis, the combined system can both match and adapt local features with considerable variability, yielding results far out of reach of classic generative MRF methods.},
archivePrefix = {arXiv},
arxivId = {1601.04589},
author = {Li, Chuan and Wand, Michael},
doi = {10.1109/CVPR.2016.272},
eprint = {1601.04589},
file = {:Users/pedro/Library/Application Support/Mendeley Desktop/Downloaded/Li, Wand - 2016 - Combining Markov Random Fields and Convolutional Neural Networks for Image Synthesis.pdf:pdf},
isbn = {9781467388511},
issn = {10636919},
journal = {Cvpr 2016},
pages = {9},
title = {{Combining Markov Random Fields and Convolutional Neural Networks for Image Synthesis}},
url = {https://github.com/chuanli11/CNNMRF},
year = {2016}
}
@article{Lindenmayer1968,
abstract = {Continuing the presentation of a theory of growth models for filamentous organisms, the treatment is extended to cases where inputs are received by each cell from both directions along the filament, and the change of state and the output of a cell is determined by its present state and the two inputs it receives. Further symbolism is introduced to take care of branching filaments as well. Two entirely different models are constructed for a particular branching organism, resembling one of the red algae. These models are compared with reference to the number of states employed, and the presence or absence of instructions for unequal divisions and for inductive relationships among the cells. The importance of a morphogenetic control theory concerning these relationships is emphasized.},
author = {Lindenmayer, a},
doi = {10.1016/0022-5193(68)90080-5},
file = {:Users/pedro/Downloads/lsystems.pdf:pdf},
isbn = {978-1-60558-516-1},
issn = {00225193},
journal = {Journal of theoretical biology},
number = {3},
pages = {300--315},
pmid = {5659072},
title = {{Mathematical models for cellular interactions in development. II. Simple and branching filaments with two-sided inputs.}},
volume = {18},
year = {1968}
}
@book{Murphy2012,
author = {Murphy, Kevin P},
publisher = {MIT press},
title = {{Machine learning: a probabilistic perspective}},
year = {2012}
}
@article{Shaker2014,
abstract = {In this paper we present a procedural content generator using Non-negative Matrix Factorisation (NMF). We use representative levels from five dissimilar content generators to train NMF models that learn patterns about the various components of the game. The constructed models are then used to automatically generate content that resembles the training data as well as to generate novel content through exploring new combinations of patterns. We describe the methodology followed and we show that the generator proposed has a more powerful capability than each of generator taken individually. The generator's output is compared to the other generators using a number of expressivity metrics. The results show that the proposed generator is able to resemble each individual generator as well as demonstrating ability to cover a wider and more novel content space.},
author = {Shaker, Noor and Abou-zleikha, Mohamed},
file = {:Users/pedro/Library/Application Support/Mendeley Desktop/Downloaded/Shaker, Abou-zleikha - 2014 - Alone We Can Do So Little, Together We Can Do So Much A Combinatorial Approach for Generating Game Content.pdf:pdf},
isbn = {978-1-57735-681-3},
journal = {Aiide},
keywords = {Poster Papers},
pages = {167--173},
title = {{Alone We Can Do So Little, Together We Can Do So Much: A Combinatorial Approach for Generating Game Content}},
url = {http://www.aaai.org/ocs/index.php/AIIDE/AIIDE14/paper/view/9000/8944},
year = {2014}
}
@article{Shaker2012,
abstract = {This paper presents the use of design grammars to evolve playable 2D platform levels through grammatical evolution (GE). Representing levels using design grammars allows simple encoding of important level design constraints, and allows remarkably compact descriptions of large spaces of levels. The expressive range of the GE-based level generator is analyzed and quantitatively compared to other feature-based and the original level generators by means of aesthetic and similarity based measures. The analysis reveals strengths and shortcomings of each generator and provides a general framework for comparing content generated by different generators. The approach presented can be used as an assistive tool by game designers to compare and analyze generators' capabilities within the same game genre.},
author = {Shaker, Noor and Nicolau, Miguel and Yannakakis, Georgios N. and Togelius, Julian and O'Neill, Michael},
doi = {10.1109/CIG.2012.6374170},
file = {:Users/pedro/Library/Application Support/Mendeley Desktop/Downloaded/Shaker et al. - 2012 - Evolving levels for Super Mario Bros using grammatical evolution(2).pdf:pdf},
isbn = {9781467311922},
journal = {2012 IEEE Conference on Computational Intelligence and Games, CIG 2012},
number = {1},
pages = {304--311},
title = {{Evolving levels for Super Mario Bros using grammatical evolution}},
year = {2012}
}
@article{Snodgrass2013,
author = {Snodgrass, Sam and Onta{\~{n}}{\'{o}}n, Santiago},
file = {:Users/pedro/Library/Application Support/Mendeley Desktop/Downloaded/Snodgrass, Onta{\~{n}}{\'{o}}n - 2013 - Generating Maps Using Markov Chains.pdf:pdf},
journal = {Aiide},
pages = {25--28},
title = {{Generating Maps Using Markov Chains}},
url = {http://www.aaai.org/ocs/index.php/AIIDE/AIIDE13/paper/viewPDFInterstitial/7447/7632},
year = {2013}
}
@article{Sorenson2010,
author = {Sorenson, Nathan and Pasquier, Philippe},
doi = {10.1007/978-3-642-12239-2_14},
file = {:Users/pedro/Library/Application Support/Mendeley Desktop/Downloaded/Sorenson, Pasquier - 2010 - Towards a Generic Framework for Automated Video Game Level Creation Applications of Evolutionary Computation.pdf:pdf},
isbn = {978-3-642-12238-5},
keywords = {genetic algorithms,level design,procedural content,video games},
pages = {131--140 ST  -- Towards a Generic Framework for Auto},
title = {{Towards a Generic Framework for Automated Video Game Level Creation Applications of Evolutionary Computation}},
url = {http://dx.doi.org/10.1007/978-3-642-12239-2{\_}14},
volume = {6024},
year = {2010}
}
@article{Sorenson2011,
abstract = {This paper presents an approach to automatic video game level design consisting of a computational model of player enjoyment and a generative system based on evolutionary computing. The model estimates the entertainment value of game levels according to the presence of {\&}{\#}x201C;rhythm groups,{\&}{\#}x201D; which are defined as alternating periods of high and low challenge. The generative system represents a novel combination of genetic algorithms (GAs) and constraint satisfaction (CS) methods and uses the model as a fitness function for the generation of fun levels for two different games. This top{\&}{\#}x2013;down approach improves upon typical bottom{\&}{\#}x2013;up techniques in providing semantically meaningful parameters such as difficulty and player skill, in giving human designers considerable control over the output of the generative system, and in offering the ability to create levels for different types of games.},
author = {Sorenson, Nathan and Pasquier, Philippe and DiPaola, Steve},
doi = {10.1109/TCIAIG.2011.2161310},
file = {:Users/pedro/Library/Application Support/Mendeley Desktop/Downloaded/Sorenson, Pasquier, DiPaola - 2011 - A generic approach to challenge modeling for the procedural creation of video game levels.pdf:pdf},
isbn = {1943-068X VO  - 3},
issn = {1943068X},
journal = {IEEE Transactions on Computational Intelligence and AI in Games},
keywords = {Challenge modeling,fun,player enjoyment,procedural content creation,video games},
number = {3},
pages = {229--244},
title = {{A generic approach to challenge modeling for the procedural creation of video game levels}},
volume = {3},
year = {2011}
}
@article{Summerville2015,
author = {Summerville, Adam J and Mateas, Michael},
file = {:Users/pedro/Library/Application Support/Mendeley Desktop/Downloaded/Summerville, Mateas - 2015 - The Learning of Zelda Data-Driven Learning of Level Topology.pdf:pdf},
isbn = {9780991398249},
keywords = {data-driven level design,games,level de-,machine learning,probabilistic learning,procedural content generation,sign},
number = {Fdg},
title = {{The Learning of Zelda : Data-Driven Learning of Level Topology}},
year = {2015}
}
@article{Summerville2016,
abstract = {Levels are a key component of many different video games, and a large body of work has been produced on how to procedurally generate game levels. Recently, Machine Learning techniques have been applied to video game level generation towards the purpose of automatically generating levels that have the properties of the training corpus. Towards that end we have made available a corpora of video game levels in an easy to parse format ideal for different machine learning and other game AI research purposes.},
archivePrefix = {arXiv},
arxivId = {1606.07487},
author = {Summerville, Adam James and Snodgrass, Sam and Mateas, Michael and Onta{\~{n}}{\'{o}}n, Santiago},
eprint = {1606.07487},
file = {:Users/pedro/Library/Application Support/Mendeley Desktop/Downloaded/Summerville et al. - 2016 - The VGLC The Video Game Level Corpus(2).pdf:pdf},
journal = {Arxiv},
keywords = {corpus,level design,machine learning,procedural content genera-,tion,video games},
title = {{The VGLC: The Video Game Level Corpus}},
url = {http://arxiv.org/abs/1606.07487},
year = {2016}
}
@article{Summerville2015a,
abstract = {Experimental AI in Games: Papers from the AIIDE 2015 Workshop},
author = {Summerville, Adam and Mateas, Michael},
file = {:Users/pedro/Library/Application Support/Mendeley Desktop/Downloaded/Summerville, Mateas - 2015 - Sampling Hyrule Sampling Probabilistic Machine Learning for Level Generation.pdf:pdf},
keywords = {EXAG},
pages = {1--5},
title = {{Sampling Hyrule: Sampling Probabilistic Machine Learning for Level Generation}},
url = {http://www.exag.org/accepted-papers/{\%}5Cnpapers3://publication/uuid/6C73920E-C485-4CC6-9FDD-F455CEDC15B1},
year = {2015}
}
@article{Togelius2010,
abstract = {A search-based procedural content generation (SBPCG) algorithm for strategy game maps is proposed. Two representations for strategy game maps are devised, along with a number of objectives relating to predicted player experience. A multiobjective evolutionary algorithm is used for searching the space of maps for candidates that satisfy pairs of these objectives. As the objectives are inherently partially conflicting, the algorithm generates Pareto fronts showing how these objectives can be balanced. Such fronts are argued to be a valuable tool for designers looking to balance various design needs. Choosing appropriate points (manually or automatically) on the Pareto fronts, maps can be found that exhibit good map design according to specified criteria, and could either be used directly in e.g. an RTS game or form the basis for further human design.},
author = {Togelius, Julian and Preuss, Mike and Yannakakis, Gn},
doi = {10.1145/1814256.1814259},
file = {:Users/pedro/Library/Application Support/Mendeley Desktop/Downloaded/Togelius, Preuss, Yannakakis - 2010 - Towards multiobjective procedural map generation.pdf:pdf},
isbn = {9781450300230},
journal = {Proceedings of the 2010 Workshop on Procedural Content Generation in Games PCGames 10},
pages = {1--8},
title = {{Towards multiobjective procedural map generation}},
url = {http://portal.acm.org/citation.cfm?doid=1814256.1814259{\%}5Cnhttp://dl.acm.org/citation.cfm?id=1814259},
year = {2010}
}
